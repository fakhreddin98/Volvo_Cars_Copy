# pip install selenium måste installeras
# https://msedgedriver.azureedge.net/111.0.1661.51/edgedriver_win64.zip

import tkinter as tk
import threading
from selenium import webdriver
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time


class URLGUI:
    def __init__(self):
        self.urls = []
        self.root = tk.Tk()
        self.root.title("URL List")
        
        # create URL input field and add button
        self.url_input = tk.Entry(self.root, width=40)
        self.url_input.pack()
        self.add_button = tk.Button(self.root, text="Add URL", command=self.add_url)
        self.add_button.pack()
        
        # create a listbox to show the URLs
        self.url_listbox = tk.Listbox(self.root, width=40, height=10)
        self.url_listbox.pack()
        
        # create remove button to remove selected URL
        self.remove_button = tk.Button(self.root, text="Remove URL", command=self.remove_url)
        self.remove_button.pack()
        
        # create start button
        self.start_button = tk.Button(self.root, text="Start", command=self.start)
        self.start_button.pack()
        
        self.root.mainloop()
    
    def add_url(self):
        url = self.url_input.get()
        self.urls.append(url)
        self.url_listbox.insert(tk.END, url)  # insert the URL into the listbox
        self.url_input.delete(0, tk.END)  # clear the input field
    
    def remove_url(self):
        # remove the selected URL from the listbox and the urls list
        selection = self.url_listbox.curselection()
        if selection:
            index = selection[0]
            self.url_listbox.delete(index)
            del self.urls[index]
    
    def start(self):
        # code that will run when the Start button is pressed
        print("Starting with URLs:", self.urls)


def main(urls):
    # set the path to your Microsoft Edge webdriver executable
    edge_path = r"C:\Users\fkabawe\Documents\msedgedriver.exe"
    print ("här är urls" ,urls)
    # create a new Microsoft Edge webdriver instance
    driver = webdriver.Edge(executable_path=edge_path)

    driver.get(urls[0])

    for url in urls[1:]:
        driver.execute_script(f"window.open('{url}')")

    # get the handles of all the open tabs
    tab_handles = driver.window_handles

    # switch to the first tab
    current_tab = 0

    # iterate through the URLs
    while True:
        # navigate to the URL
        current_tab = (current_tab + 1) % len(tab_handles)
        driver.switch_to.window(tab_handles[current_tab])

        # wait for the "Refresh" button to become clickable
        try:
            refresh_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, "reportAppBarRefreshBtn")))
            ActionChains(driver).move_to_element(refresh_button).click(refresh_button).perform()
            print ("refreash excuted")  
            time.sleep(10)

        except:
            # if the URL is not a Power BI website, wait for 60 seconds before moving to the next URL
            time.sleep(10)
            continue

if __name__ == '__main__':
    url_gui = URLGUI()
    urls = url_gui.urls
    main(urls)
